msg
x <-5
x
x <- 1:25
x
attributes(x)
attributes(msg)
y <- vector(logical, 10)
y <- vector(logical, 10L)
x<-c(0.5,0.6)
x
x<-c(TRUE,FALSE)
x
x<-c(1+0i,2+4i)
x
x <- vector("numeric",length = 10)
x
y<-c(1.7,"a")
y
y<-c(true,2)
y<-c(T,2)
y
y<-c(F,2)
y
class(x)
x
x<-1:6
class(x)
as.numeric(x)
as.logical(x)
as.character(x)
x<-list(1,"a", TRUE, 1+4i)
x
x<-matrix()
x
x<-matrix(nrow = 2,ncol = 3)
m
x
dim(x)
attach(x)
attributes(x)
m<-matrix(1:6,nrow = 2,ncol = 3)
m
m<-matrix(1:8,nrow = 2,ncol = 3)
m<-matrix(1:8,nrow = 2,ncol = 4)
m
m<-1:10
dim(m)<-c(2,5)
m
m
x<-1:3
y<-10:12
cbind(x,y)
rbind(x,y)
x<-factor(c("yes", "no","yes","no"))
x
table(x)
unclass(x)
x
x
x<-c(1,2.NA)
x<-c(1,2,NA)
x
is.na(x)
names(x)
getwd()
x
x[x>1]
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
library(swirl)
install_from_swirl("R Programming")
install_from_swirl("R Programming")
swirl()
5+7
x<-5+7
x
y<-x
y<-x-3
y
z<-c(1.1,9,3.14)
c()
?c
z
z<-c(z,555)
c(z,555,z)
z*Z+100
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
add2<-function(x, y){
x+y
}
add2(3,5)
x<-1:20
above(x,12)
above<-function(x, n){
use<-x>n
x[use]
}
above(x,12)
above<-function(x, n=10){
use<-x>n
x[use]
}
above(x)
columnmean<-function(y){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
columnmean(airquality)
columnmean<-function(y, removeNA=TRUE){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i], na.rm=removeNA)
}
means
}
columnmean(airquality)
?columnmean
formals(columnmean)
search()
library(swirl)
ls()
rm(list=ls())
swirl()
==
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
NOT(5==7)
!(5==7)
FALSE&FALSE
TRUE & c(TRUE, FALSE,FALSE)
TRUE && c(TRUE, FALSE,FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8 || 6!=8 && 4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6, !FALSE)
inits<-sample(10)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
library(swirl)
swirl()
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
month(t1)
months(t1)
quarters(t2)
t3<-strptime("October 17, 1986
| 08:24")
t3<-strptime("October 17, 1986 08:24")
strptime("October 17, 1986  08:24")
strptime("October 17, 1986  08:24", YYYY-MM-DD)
strptime("October 17, 1986  08:24", "YYYY-MM-DD")
strptime("October 17, 1986 08:24", "YYYY-MM-DD")
strptime("October 17, 1986 08:24")
strptime("October 17, 1986 08:24", "YYYY-MM-DD")
info()
strptime("October 17, 1986 08:24", "%b %d, %Y %I:%M %p")
strptime("October 17, 1986 08:24")
strptime("October 17, 1986 08:24",)
strptime("October 17, 1986 08:24","%m/%d/%y %H:%M")
t3<-strptime("October 17, 1986 08:24","%m/%d/%y %H:%M")
t3<-strptime("October 17, 1986 08:24")
t3<-strptime("October 17, 1986 08:24",)
t3<-strptime("October 17, 1986 08:24",format="")
t3<-strptime("October 17, 1986 08:24",format="%Y-%m-%d %H:%M:%S")
t3<-"October 17, 1986 08:24"
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(), t1, units = 'days')
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
library(swirl)
swirl()
bye()
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population,flags$red, summary)
tapply(flags$population,flags$landmasses, summary)
tapply(flags$population,flags$landmass, summary)
library(datasets)
data("iris")
?iris
iris$Species
tapply(iris$Sepal.Length,iris$Species, mean)
iris
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
?apply
apply(iris, 2, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$hp, summary)
tapply(mtcars$hp, mtcars$cyl, summary)
tapply(mtcars$hp, mtcars$cyl, abs)
let avg4cyl = mtcars.Data |> Seq.filter (fun x -> x?cyl = "4") |> Seq.averageBy (fun x -> x?hp.AsFloat())
let avg8cyl = mtcars.Data |> Seq.filter (fun x -> x?cyl = "8") |> Seq.averageBy (fun x -> x?hp.AsFloat())
abs(avg4cyl - avg8cyl)
tapply(mtcars$hp, mtcars$cyl, mean)
mean<-tapply(mtcars$hp, mtcars$cyl, mean)
mean$4
mean_diff<-tapply(mtcars$hp, mtcars$cyl, mean)
mean_diff<-tapply(mtcars$hp, mtcars$cyl, mean)
mean_diff
mean_diff[,1]
mean_diff[1,1]
mean_diff[1,]
mean_diff[1]
abs(mean_diff[1],mean_diff[3])
abs(mean_diff[1]-mean_diff[3])
debug(ls)
ls
ls()
bye
q
library(datasets)
data(iris)
Q
Q
library(swirl)
swirl()
Q
exitz
bye()
swirl()
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),100, replace=TRUE, prob=(0.3,0.7))
flips<-sample(c(0,1),100, replace=TRUE, prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100,prob=0.7)
flips2<-rbinom(1, size=100,prob=0.7)
flips2<-rbinom(100, size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
?rpois
?rpois
rpois()
rpois
rpois(5,10)
my_pois<-replicate(100,rpois(5,10))
my<-pois
my_pois
cm<-colmeans(my_pois)
cm<-colMeans(my_pois)
hist(cm)
plot(cars, col=2)
plot(cars, col=2, c(10))
plot(cars, col=2, c(10,15))
plot(cars, xlim=c(10,15))
plot(cars, xlim=c(10,15), pch=)
plot(cars, xlim=c(10,15), pch=2)
plot(cars, pch=2)
mtcars
data(mtcars)
boxplot()
?boxplot
boxplot(data=mtcars, formula=mpg ~ cyl)
boxplot(data=mtcars, formula=mpg ~ cyl)
boxplot(x=0,data=mtcars, formula=mpg ~ cyl)
boxplot(formula=mpg ~ cyl, data=mtcars)
hist(mtcars$mpg)
install.packages("RMySQL")
defaults write org.R-project.R force.LANG en_US.UTF-8
ucscDB<-dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
source('~/data_science/yahoo_webscraping.R')
u <- "http://uk.search.yahoo.com/search;_ylt=A7x9QV6rWrxOYTsAHNFLBQx.?fr2=time&rd=r1&fr=yfp-t-702&p=Wil%20Wheaton&btf=w"
df <- get_yahoo_search_df(u)
t(df[1:5, ])
u <- "http://uk.search.yahoo.com/search;_ylt=A7x9QV6rWrxOYTsAHNFLBQx.?fr2=time&rd=r1&fr=yfp-t-702&p=Wil%20Wheaton&btf=w"
df <- get_yahoo_search_df(u)
t(df[1:5, ])
source('~/data_science/yahoo_webscraping.R')
source('~/data_science/yahoo_webscraping.R')
debugSource('~/data_science/yahoo_webscraping.R')
u <- "http://uk.search.yahoo.com/search;_ylt=A7x9QV6rWrxOYTsAHNFLBQx.?fr2=time&rd=r1&fr=yfp-t-702&p=Wil%20Wheaton&btf=w"
df <- get_yahoo_search_df(u)
t(df[1:5, ])
debugSource('~/data_science/yahoo_webscraping.R')
u <- "http://uk.search.yahoo.com/search;_ylt=A7x9QV6rWrxOYTsAHNFLBQx.?fr2=time&rd=r1&fr=yfp-t-702&p=Wil%20Wheaton&btf=w"
df <- get_yahoo_search_df(u)
t(df[1:5, ])
debugSource('~/data_science/yahoo_webscraping.R')
debugSource('~/data_science/yahoo_webscraping.R')
u <- "http://uk.search.yahoo.com/search;_ylt=A7x9QV6rWrxOYTsAHNFLBQx.?fr2=time&rd=r1&fr=yfp-t-702&p=Wil%20Wheaton&btf=w"
df <- get_yahoo_search_df(u)
t(df[1:5, ])
library(swirl)
swirl()
mydf<-read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
package_version(dyplr)
package_version("dyplr")
package_version("dplyr")
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
5:20
-(5:20)
select(-(X:size))
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version=="3.1.1", country=="US")
?Comparison
filter(cran, r_version<="3.0.2", country=="IN")
filter(cran, country=="US" | country=="IN")
filter(cran, size>100500, r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<-select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb=size/2^20)
mutate(cran3, size_gb=size_mb/2^10)
mutate(cran3, size_gb=size_mb/2^10)
cran3
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
crany<-tbl_df(mydf)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
?n_distinct
submit()
summarize(tbl, pack_sum)
summarize(tbl, pack_sum)
tbl
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts<-filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique<-filter(pack_sum, unique>465)
View(top_unique)
arrange(top_unique, desc(unique))
top_unique_sorted<-arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
cran %>%
select(ip_id, country, package, size) %>%
print
submit()
reset()
submit()
submit()
?select
?%>%
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
debugSource('~/data_science/run_analysis/run_analysis.R')
run_analysis()
setwd("data_science/run_analysis")
run_analysis()
debugSource('~/data_science/run_analysis/run_analysis.R')
run_analysis()
---
source('~/.active-rstudio-document', echo=TRUE)
- dplyr library
- dplyr library
- dplyr library
?inner_join
library(knitr)
knit2html("CodeBook.Rmd")
run_analysis()
source('~/data_science/run_analysis/run_analysis.R', echo=TRUE)
getwd()
run_analysis()
source('~/data_science/run_analysis/run_analysis.R', echo=TRUE)
run_analysis()
---
title: "Untitled"
output: github_document
